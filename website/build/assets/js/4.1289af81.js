(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{10:function(t,e,r){"use strict";function a(t,e,r,a,n,s,i,o){var d,_="function"==typeof t?t.options:t;if(e&&(_.render=e,_.staticRenderFns=r,_._compiled=!0),a&&(_.functional=!0),s&&(_._scopeId="data-v-"+s),i?(d=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),n&&n.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(i)},_._ssrRegister=d):n&&(d=o?function(){n.call(this,this.$root.$options.shadowRoot)}:n),d)if(_.functional){_._injectStyles=d;var v=_.render;_.render=function(t,e){return d.call(e),v(t,e)}}else{var l=_.beforeCreate;_.beforeCreate=l?[].concat(l,d):[d]}return{exports:t,options:_}}r.d(e,"a",function(){return a})},194:function(t,e,r){"use strict";r.r(e);var a=r(10),n=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),r("h2",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),r("p",[t._v("本次对 dva 源码的解读除了传统的从 api 入手外还将引入带入问题读源码的理念，因为只有这样当读完源码之后才会有切身的收获。\n另外除了 dva 的源码外还会解读一些常用的 dva 插件的源码。")]),t._v(" "),r("h2",{attrs:{id:"目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),r("ul",[r("li",[r("router-link",{attrs:{to:"/dva/"}},[t._v("dva")])],1),t._v(" "),r("li",[t._v("插件\n"),r("ul",[r("li",[r("router-link",{attrs:{to:"/dva-loading/"}},[t._v("dva-loading")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/dva-immer/"}},[t._v("dva-immer")])],1)])])]),t._v(" "),r("h2",{attrs:{id:"注意"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注意","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),r("ul",[r("li",[t._v("对于源码的解读我也采用模块化的方式，如果一个方法里面引用了很多其它模块的方法，我会在其对应的章节里面阐述而不会都放在本章里面累述")]),t._v(" "),r("li",[t._v("解析里面省略了 invariant 的说明")]),t._v(" "),r("li",[r("code",[t._v("process.env.NODE_ENV !== 'production'")]),t._v(" 的代码属于开发时的代码，这个我们也省略不讲")])]),t._v(" "),r("h2",{attrs:{id:"相关阅读"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#相关阅读","aria-hidden":"true"}},[t._v("#")]),t._v(" 相关阅读")]),t._v(" "),r("p",[t._v("dva 应为是对于 redux react-redux redux-saga react-router 的整合，所以如果你对于以上这些库的源码感兴趣可以看我对应源码解读：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://react-redux-source-docs.netlify.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-redux"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://lfesc.github.io/redux-saga/",target:"_blank",rel:"noopener noreferrer"}},[t._v("redux-saga"),r("OutboundLink")],1)])])])},[],!1,null,null,null);e.default=n.exports}}]);